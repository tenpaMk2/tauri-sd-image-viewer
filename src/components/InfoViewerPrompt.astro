---
// TODO: プロンプトのコピーボタン。

type Props = {
  promptType?: "positive" | "negative";
};

const { promptType = "positive" } = Astro.props;
const title = promptType === "positive" ? "Positive prompt" : "Negative prompt";
---

<info-viewer-prompt
  class="is-block block is-clipped"
  data-prompt-type={promptType}
>
  <p class="title is-4">{title}</p>
  <div class="tags">
    <span class="tag is-skeleton">masterpiece</span>
    <span class="tag is-skeleton">1girl</span>
    <span class="tag is-skeleton">solo</span>
    <span class="tag is-skeleton">red eyes</span>
    <span class="tag is-skeleton">black hair</span>
    <span class="tag is-skeleton">long hair</span>
  </div>
</info-viewer-prompt>

<style is:global>
  info-viewer-prompt .tags > .tag {
    padding-right: 0.3rem;
    padding-left: 0.3rem;
    font-size: 0.875rem;
  }
</style>

<style>
  info-viewer-prompt .tags {
    gap: 0.3rem;
  }
</style>

<script>
  import type { ReadImageInfoEventDetail } from "@scripts/global";
  import type { SdTag } from "@scripts/rust-synced-types";

  export class InfoViewerPrompt extends HTMLElement {
    containerEl!: HTMLElement;

    connectedCallback() {
      this.containerEl = this.querySelector("div")!;

      document.addEventListener("read-image-info", this.handleReadImageInfo);
    }

    private handleReadImageInfo = (
      event: CustomEvent<ReadImageInfoEventDetail>
    ) => {
      const sdParameters = event.detail.png_info.sd_parameters;
      const promptType = this.getAttribute("data-prompt-type");

      if (!sdParameters) {
        console.warn("No SD parameters found in the image info.");
        return;
      }

      if (promptType === "positive") {
        this.updateTags(sdParameters.positive_sd_tags ?? []);
      } else if (promptType === "negative") {
        this.updateTags(sdParameters.negative_sd_tags ?? []);
      }
    };

    updateTags(sdTags: SdTag[]) {
      this.containerEl.classList.remove("skeleton-block");

      const tagEls = sdTags.map((tag) => {
        const tagEl = document.createElement("span");
        tagEl.classList.add("tag");
        tagEl.classList.add("is-primary");

        if (tag.weight === null) {
          tagEl.textContent = tag.name;
        } else {
          tagEl.textContent = `(${tag.name}:${tag.weight})`;
        }

        return tagEl;
      });

      console.debug({ tagElsLength: tagEls.length });

      this.containerEl.replaceChildren(...tagEls);
    }
  }
  customElements.define("info-viewer-prompt", InfoViewerPrompt);
</script>
