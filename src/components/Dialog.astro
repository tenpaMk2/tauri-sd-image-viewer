<section class="section">
  <div class="container">
    <div class="block">
      <div class="field is-grouped">
        <div class="control">
          <input
            id="confirm-button"
            class="button is-primary"
            value="Confirm"
          />
        </div>
        <div class="control">
          <input
            id="message-button"
            class="button is-primary"
            value="Message"
          />
        </div>
        <div class="control">
          <input id="open-button" class="button is-primary" value="Open" />
        </div>
        <div class="control">
          <input id="save-button" class="button is-info" value="Save" />
        </div>
      </div>
    </div>

    <div id="file-content" class="block skeleton-lines">
      <div></div>
      <div></div>
      <div></div>
      <div></div>
    </div>
  </div>
</section>

<script>
  import * as path from "@tauri-apps/api/path";
  import { confirm, message, open, save } from "@tauri-apps/plugin-dialog";
  import { BaseDirectory, readFile } from "@tauri-apps/plugin-fs";

  const confirmButton = document.querySelector("#confirm-button")!;

  confirmButton.addEventListener("click", async (e) => {
    e.preventDefault();

    const confirmation = await confirm(
      "This action cannot be reverted. Are you sure?",
      { title: "Tauri", kind: "warning" }
    );

    console.log(confirmation);

    console.log(await path.appCacheDir());
    console.log(await path.appConfigDir());
    console.log(await path.appDataDir());
  });

  const messageButton = document.querySelector("#message-button")!;

  messageButton.addEventListener("click", async (e) => {
    e.preventDefault();

    const messageResult = await message("File not found", {
      title: "Tauri",
      kind: "error",
    });

    console.log(messageResult);
  });

  const openButton = document.querySelector("#open-button")!;

  openButton.addEventListener("click", async (e) => {
    e.preventDefault();

    const openingResult = await open({
      multiple: false,
      directory: false,
    });

    console.log(openingResult);

    if (!openingResult) {
      console.error("No file selected");
      return;
    }

    // const fileContent = await readTextFile(openingResult);
    // console.log(fileContent);
    // const fileContentEl = document.querySelector("#file-content")!;
    // fileContentEl.classList.remove("skeleton-lines");
    // fileContentEl.classList.add("content");
    // fileContentEl.textContent = fileContent;

    const imageArray = await readFile(openingResult);
    console.log(imageArray);

    const blob = new Blob([imageArray], { type: "image/jpeg" });
    const url = URL.createObjectURL(blob);
    const imageEl = document.createElement("img");
    imageEl.src = url;

    const fileContentEl = document.querySelector("#file-content")!;
    fileContentEl.classList.remove("skeleton-lines");
    fileContentEl.appendChild(imageEl);
  });

  const saveButton = document.querySelector("#save-button")!;

  saveButton.addEventListener("click", async (e) => {
    e.preventDefault();

    const savingResult = await save({
      filters: [
        {
          name: "My Filter",
          extensions: ["png", "jpeg", "jpg"],
        },
      ],
    });

    console.log(savingResult);

    console.log(BaseDirectory.AppData);
  });
</script>
